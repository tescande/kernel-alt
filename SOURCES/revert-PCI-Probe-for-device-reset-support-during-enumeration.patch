From: Unknown Contributor <foo@bar.com>
Subject: Revert "PCI: Probe for device reset support during enumeration"

This reverts commit 5b0764cac9f1b70a6704b0e546be67c24cc05517.

This commit moved checking whether a device could be reset much earlier
to when the device is first probed.  A device can be reset using several
mechanisms, one of which is a SBR. To avoid resetting multiple devices,
the kernel only allows this when no other devices would be affected by
the SBR. However, when the device is first probed, the other devices on
the bus have not been discovered yet and so it is erroneously marked as
supporting reset and has a reset sysfs file created. Later, pciback
calls the same function, determines that reset is not supported and
tries to create its own reset file which fails because one already
exists.

Revert this commit for now until a solution is worked out with upstream.
diff --git a/drivers/pci/pci-sysfs.c b/drivers/pci/pci-sysfs.c
index 9ecfe13157c0..a6d09bb0bf4d 100644
--- a/drivers/pci/pci-sysfs.c
+++ b/drivers/pci/pci-sysfs.c
@@ -1466,10 +1466,11 @@ static int pci_create_capabilities_sysfs(struct pci_dev *dev)
 	pcie_vpd_create_sysfs_dev_files(dev);
 	pcie_aspm_create_sysfs_dev_files(dev);
 
-	if (dev->reset_fn) {
+	if (!pci_probe_reset_function(dev)) {
 		retval = device_create_file(&dev->dev, &reset_attr);
 		if (retval)
 			goto error;
+		dev->reset_fn = 1;
 	}
 	return 0;
 
diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 201f9e5ff55c..f1d8dc213300 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -2334,9 +2334,6 @@ static void pci_init_capabilities(struct pci_dev *dev)
 	pci_aer_init(dev);
 
 	pcie_report_downtraining(dev);
-
-	if (pci_probe_reset_function(dev) == 0)
-		dev->reset_fn = 1;
 }
 
 /*
