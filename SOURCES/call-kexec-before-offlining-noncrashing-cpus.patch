diff --git a/arch/x86/include/asm/xen/hypercall.h b/arch/x86/include/asm/xen/hypercall.h
index 6b5c710846f5..d66ba01478ac 100644
--- a/arch/x86/include/asm/xen/hypercall.h
+++ b/arch/x86/include/asm/xen/hypercall.h
@@ -415,6 +415,13 @@ HYPERVISOR_hvm_op(int op, void *arg)
        return _hypercall2(unsigned long, hvm_op, op, arg);
 }
 
+static inline int __must_check
+HYPERVISOR_kexec_op(
+        unsigned long op, void *args)
+{
+	return _hypercall2(int, kexec_op, op, args);
+}
+
 static inline int
 HYPERVISOR_tmem_op(
 	struct tmem_op *op)
diff --git a/include/xen/interface/kexec.h b/include/xen/interface/kexec.h
new file mode 100644
index 000000000000..443df8adf8df
--- /dev/null
+++ b/include/xen/interface/kexec.h
@@ -0,0 +1,10 @@
+#ifndef _XEN_KEXEC_H
+#define _XEN_KEXEC_H
+
+#define KEXEC_CMD_kexec                    0
+typedef struct xen_kexec_exec {
+	int type;
+} xen_kexec_exec_t;
+
+#endif
+
diff --git a/kernel/panic.c b/kernel/panic.c
index 982ecba286c0..62de1048f40e 100644
--- a/kernel/panic.c
+++ b/kernel/panic.c
@@ -32,6 +32,12 @@
 #include <linux/sysfs.h>
 #include <asm/sections.h>
 
+#ifdef CONFIG_XEN
+#include <xen/xen.h>
+#include <asm/xen/hypercall.h>
+#include <xen/interface/kexec.h>
+#endif
+
 #define PANIC_TIMER_STEP 100
 #define PANIC_BLINK_SPD 18
 
@@ -250,6 +256,12 @@ void panic(const char *fmt, ...)
 		dump_stack();
 #endif
 
+#ifdef CONFIG_XEN
+	if (xen_initial_domain()) {
+		xen_kexec_exec_t xke = { KEXEC_TYPE_CRASH };
+		HYPERVISOR_kexec_op(KEXEC_CMD_kexec, &xke);
+	}
+#endif
 	/*
 	 * If we have crashed and we have a crash kernel loaded let it handle
 	 * everything else.
